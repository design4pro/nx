<?php

namespace Opencart\Admin\Controller\Extension\<%= className %>\Theme;

class <%= className %> extends \Opencart\System\Engine\Controller
{
  public function index(): void
  {
    $this->load->language('extension/<%= fileName %>/theme/<%= fileName %>');

    $this->document->setTitle($this->language->get('heading_title'));

    $data['breadcrumbs'] = [];

    $data['breadcrumbs'][] = [
      'text' => $this->language->get('text_home'),
      'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'])
    ];

    $data['breadcrumbs'][] = [
      'text' => $this->language->get('text_extension'),
      'href' => $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=theme')
    ];

    $data['breadcrumbs'][] = [
      'text' => $this->language->get('heading_title'),
      'href' => $this->url->link('extension/<%= fileName %>/theme/<%= fileName %>', 'user_token=' . $this->session->data['user_token'])
    ];

    $data['save'] = $this->url->link('extension/<%= fileName %>/theme/<%= fileName %>|save', 'user_token=' . $this->session->data['user_token']);
    $data['back'] = $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=theme');

    if (isset($this->request->get['store_id'])) {
      $this->load->model('setting/setting');

      $setting_info = $this->model_setting_setting->getSetting('theme_<%= fileName %>', $this->request->get['store_id']);
    }

    if (isset($setting_info['theme_<%= fileName %>_status'])) {
      $data['theme_<%= fileName %>_status'] = $setting_info['theme_<%= fileName %>_status'];
    } else {
      $data['theme_<%= fileName %>_status'] = '';
    }

    $data['header'] = $this->load->controller('common/header');
    $data['column_left'] = $this->load->controller('common/column_left');
    $data['footer'] = $this->load->controller('common/footer');

    $this->response->setOutput($this->load->view('extension/<%= fileName %>/theme/<%= fileName %>', $data));
  }

  public function save(): void
  {
    $this->load->language('extension/<%= fileName %>/theme/<%= fileName %>');

    $json = [];

    if (!$this->user->hasPermission('modify', 'extension/<%= fileName %>/theme/<%= fileName %>')) {
      $json['error'] = $this->language->get('error_permission');
    }

    if (!$json) {
      $this->load->model('setting/setting');

      $this->model_setting_setting->editSetting('theme_<%= fileName %>', $this->request->post, $this->request->get['store_id'] ?? 0);

      $json['success'] = $this->language->get('text_success');
    }

    $this->response->addHeader('Content-Type: application/json');
    $this->response->setOutput(json_encode($json));
  }

  public function install(): void
  {
    if ($this->user->hasPermission('modify', 'extension/theme')) {
      // Add startup to catalog
      $startup_data = [
        'code'        => 'theme_<%= fileName %>',
        'description' => '<%= name %>',
        'action'      => 'catalog/extension/<%= fileName %>/startup/theme_<%= fileName %>',
        'status'      => 1,
        'sort_order'  => 2
      ];

      // Add startup for admin
      $this->load->model('setting/startup');

      $this->model_setting_startup->addStartup($startup_data);
    }
  }

  public function uninstall(): void
  {
    if ($this->user->hasPermission('modify', 'extension/theme')) {
      $this->load->model('setting/startup');

      $this->model_setting_startup->deleteStartupByCode('theme_<%= fileName %>');
    }
  }
}
